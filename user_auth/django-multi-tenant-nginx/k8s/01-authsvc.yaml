apiVersion: apps/v1
kind: Deployment
metadata: { name: authsvc, namespace: platform }
spec:
  replicas: 1
  selector: { matchLabels: { app: authsvc } }
  template:
    metadata: { labels: { app: authsvc } }
    spec:
      containers:
        - name: web
          image: authsvc:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          env:
            - { name: PYTHONPATH, value: "/app" }
            - { name: DJANGO_SETTINGS_MODULE, value: "authsvc.settings" }
            - { name: DJANGO_SECRET, valueFrom: { secretKeyRef: { name: app-secrets, key: DJANGO_SECRET } } }
            - { name: JWT_SECRET, valueFrom: { secretKeyRef: { name: app-secrets, key: JWT_SECRET } } }
            - { name: ROUTE_SIGNING_SECRET, valueFrom: { secretKeyRef: { name: app-secrets, key: ROUTE_SIGNING_SECRET } } }
            - { name: MYSQL_HOST, value: "mysql.platform.svc.cluster.local" }
            - { name: MYSQL_DB, value: "tenants" }
            - { name: MYSQL_USER, value: "tenants" }
            - { name: MYSQL_PASSWORD, value: "tenants_pass" }
            - { name: MYSQL_PORT, value: "3306" }
            - { name: REDIS_URL, value: "redis://redis.platform.svc.cluster.local:6379/1" }
            - { name: REDIS_URL_SESSION, value: "redis://redis.platform.svc.cluster.local:6379/2" }
          ports: [{ containerPort: 8000 }]
          readinessProbe: { httpGet: { path: "/health", port: 8000 }, initialDelaySeconds: 2, periodSeconds: 5 }  
---
apiVersion: v1
kind: Service
metadata: { name: authsvc, namespace: platform }
spec:
  selector: { app: authsvc }
  ports: [{ port: 8000, targetPort: 8000 }]
